@model SJOne.Models.UserViewModels.LocalityViewModel

@{
    ViewBag.Title = "Населённый пункт";
}

<div class="card col-lg-4 mx-auto">
    <div class="card-body">
        <h2 class="card-title text-center">Населённый пункт</h2>
        <hr />

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "AjaxAntiForgeryForm" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.RegionId)
                <div>
                    @Html.DropDownListFor(model => model.RegionId, Model.Regions, "- Регион -", new { @id = "regionList", @aria_describedby = "regionHelp", @class = "selectpicker", @data_live_search = "true" })
                </div>
                <small id="regionHelp" class="form-text text-muted">
                    *Выберите регион из списка.
                </small>
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>

            if (Model.Localities == null)
            {
                <div id="localities" class="form-group" style="display:none">
                    @Html.LabelFor(model => model.LocalityId)
                    <div>
                        @Html.DropDownListFor(model => model.LocalityId, Enumerable.Empty<SelectListItem>(), "")
                    </div>
                </div>
            }

            else
            {
                <div id="localities" class="form-group">
                    @Html.LabelFor(model => model.LocalityId)
                    <div class="input-group">
                        @Html.DropDownListFor(model => model.LocalityId, Model.Localities, "- Населённый пункт -", new { @class = "selectpicker", @data_live_search = "true", data_width = "80%", @aria_describedby = "localityHelp" })
                        <div class="input-group-append">
                            <button id="newLocality" class="btn btn-secondary" type="button"><span class="octicon octicon-pencil"></span></button>
                        </div>
                    </div>
                    <small id="localityHelp" class="form-text text-muted">
                        *Выберите населённый пункт из списка.Если нужного названия нет, Вы можете добавить его самостоятельно.
                    </small>
                    @Html.ValidationMessageFor(model => model.LocalityId, "", new { @class = "text-danger" })
                </div>
            }



            <div id="newLocalityForm" style="display:none">
                <div class="form-group">
                    <label>Новый населённый пункт</label>
                    <div class="input-group">
                        <input type="text" name="Locality" id="locality" class="form-control" style="text-transform:capitalize" aria-describedby="newLocalityHelp" />
                        <div class="input-group-append">
                            <button id="addLocality" class="btn btn-success" type="button" disabled><span class="octicon octicon-plus"></span></button>
                        </div>
                        <div class="input-group-append">
                            <button id="toListLocality" class="btn btn-outline-info" type="button"><span class="octicon octicon-x"></span></button>
                        </div>
                    </div>
                    <small id="newLocalityHelp" class="form-text text-muted">
                        *Введите название нового населённого пункта. Он добавится в выбранный регион.
                    </small>

                </div>
            </div>

            if (Model.AddClub == true)
            {
                <hr />

                <div class="form-group form-check">

                    @Html.EditorFor(model => model.Club, new { htmlAttributes = new { @aria_describedby = "clubHelp" } })
                    @Html.LabelFor(model => model.Club)
                    <small id="clubHelp" class="form-text text-muted">
                        *Отметьте этот пункт, если состоите в спортивном клубе.
                    </small>

                </div>
            }

            <hr />

            <div class="d-flex justify-content-end">
                <input id="submit" type="submit" value="Сохранить" class="btn btn-primary" />
            </div>

        }
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-select")

    <script>

        $(document).ready(function () {

            $(function () {
                $('.selectpicker').selectpicker();
            });

            let form = $('#AjaxAntiForgeryForm');
            let token = $('input[name="__RequestVerificationToken"]', form).val();

            function refreshListLocality(regionId) {
                 $.ajax({
                      type: 'GET',
                      url: '@Url.Action("LocalitiesDropDownList", "User")/' + regionId,
                     success: function (data) {
                          $('#newLocalityForm').hide();
                          $('#localities').html(data);
                          $('#localities').show();
                      }
                 });
            }

            $('#regionList').change(function () {
                let regionId = $(this).val();
                refreshListLocality(regionId);
            });

            $(document).on('click', '#newLocality', function () {
                $('#newLocalityForm').show();
                $('#localities').hide();
                $('#submit').prop('disabled', true);
                $('#locality').focus();
                $('#locality').keyup(function () {
                    if ($(this).val().length > 0) {
                        $('#addLocality').prop('disabled', false);
                    }
                    else {
                        $('#addLocality').prop('disabled', true);
                    }
                });
            });

            $('#addLocality').click(function () {
                $('#newLocalityForm').hide();
                $('#localities').show();
                $('#submit').prop('disabled', false);
                let locality = $('#locality').val();
                let regionId = $('#regionList').val();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddNewLocality", "User")',
                    dataType: 'json',
                    data: { __RequestVerificationToken: token, id: regionId, name: locality },
                    success: function (response) {
                        alert(response.responseText);
                        $('#locality').val('');
                        refreshListLocality(regionId);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });

            $('#toListLocality').click(function () {
                $('#newLocalityForm').hide();
                $('#locality').val('');
                $('#addLocality').prop('disabled', true);
                $('#localities').show();
                $('#submit').prop('disabled', false);
            });
        });
    </script>

}