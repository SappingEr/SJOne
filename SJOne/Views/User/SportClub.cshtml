@model SJOne.Models.AddSportClubViewModel

@{
    ViewBag.Title = "Спортивный клуб";
}

<div class="card col-lg-4 mx-auto">
    <div class="card-body">
        <h2 class="card-title text-center">Спортивный клуб</h2>

        <hr />

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "AjaxAntiForgeryForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.ClubRegionId)
                <div>
                    @Html.DropDownListFor(model => model.ClubRegionId, Model.ClubRegions, new { @id = "clubRegionList", @class = "selectpicker", @data_live_search = "true" })
                    @Html.ValidationMessageFor(model => model.ClubRegionId, "", new { @class = "text-danger" })
                </div>                
            </div>

            <div id="clubLocalities" class="form-group">
                @Html.LabelFor(model => model.ClubLocalityId)
                <div class="input-group">
                    @Html.DropDownListFor(model => model.ClubLocalityId, Model.ClubLocalities, new { @id = "clubLocalityList", @aria_describedby = "localityRegionHelp", @class = "selectpicker", @data_live_search = "true", data_width = "80%" })
                    <div class="input-group-append">
                        <button id="newClubLocality" class="btn btn-secondary" type="button"><span class="octicon octicon-pencil"></span></button>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ClubLocalityId, "", new { @class = "text-danger" })
                <small id="localityRegionHelp" class="form-text text-muted">
                    *Выберите регион и населённый пункт, в котором находится Ваш клуб.
                </small>
            </div>

            <div id="newClubLocalityForm" class="form-group" style="display:none">

                <label>Новый населённый пункт</label>
                <div class="input-group">
                    <input type="text" name="Locality" id="clubLocality" class="form-control" aria-describedby="newLocalityHelp" />
                    <div class="input-group-append">
                        <button id="addClubLocality" class="btn btn-success" type="button" disabled><span class="octicon octicon-plus"></span></button>
                    </div>
                    <div class="input-group-append">
                        <button id="toListClubLocality" class="btn btn-outline-info" type="button"><span class="octicon octicon-x"></span></button>
                    </div>
                </div>
                <small id="newLocalityHelp" class="form-text text-muted">
                    *Введите название нового населённого пункта.
                </small>
            </div>

            <hr />

            <div id="clubs" class="form-group">
                @Html.LabelFor(model => model.ClubId)
                <div class="input-group">
                    @Html.DropDownListFor(model => model.ClubId, Model.Clubs, "- Выберите клуб -", new { @id = "clubList", @class = "selectpicker", @data_live_search = "true", data_width = "80%" })
                    <div class="input-group-append">
                        <button id="newClub" class="btn btn-secondary" type="button"><span class="octicon octicon-pencil"></span></button>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ClubId, "", new { @class = "text-danger" })
            </div>

            <div id="newClubForm" style="display:none">
                <div class="form-group">
                    <label>Новый клуб</label>
                    <div class="input-group">
                        <input type="text" name="Club" id="club" class="form-control" />
                        <div class="input-group-append">
                            <button id="addClub" class="btn btn-success" type="button" disabled><span class="octicon octicon-plus"></span></button>
                        </div>
                        <div class="input-group-append">
                            <button id="toListClub" class="btn btn-outline-info" type="button"><span class="octicon octicon-x"></span></button>
                        </div>
                    </div>
                </div>
            </div>

        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-select")

    <script>
        $(document).ready(function () {

            $(function () {
                $('.selectpicker').selectpicker();
            });

            var form = $('#AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            function refreshClubListLocality(clubRegionId) {
                 $.ajax({
                      type: 'GET',
                      url: '@Url.Action("LocalitiesDropDownList", "User")/' + clubRegionId,
                      success: function (data) {
                          $('#clubLocalities').html(data);
                      }
                 });
            }

            function refreshListClubs(regionClubId, localityClubId) {
                 $.ajax({
                     type: 'GET',
                     url: '@Url.Action("SportClubDropDownList", "User")/' + regionClubId + '?localityId=' + localityClubId,
                     success: function (data) {
                         $('#clubs').html(data);
                     }
                 });
            }

            $(document).on('change', '#clubRegionList', function () {
                var clubRegionId = $(this).val();
                var clubLocalityId = null;
                refreshClubListLocality(clubRegionId);
                refreshListClubs(clubRegionId, clubLocalityId);
                $('#clubLocalities').html(data);
            });

             $(document).on('change', '#clubLocalityList', function () {
                var localityId = $(this).val();
                var regionId = $('#clubRegionList').val();
                refreshListClubs(regionId, localityId);
             });

            $(document).on('click', '#newClubLocality', function () {
                $('#newClubLocalityForm').show();
                $('#clubLocalities').hide();
                $('#clubLocality').focus();
                $('#clubLocality').keyup(function () {
                    if ($(this).val() != '') {

                        $('#addClubLocality').prop('disabled', false);
                    }
                    else {
                        $('#addClubLocality').prop('disabled', true);
                    }
                });
            });

            $('#toListClubLocality').click(function () {
                $('#newClubLocalityForm').hide();
                $('#clubLocality').val('');
                $('#toAddClubLocality').prop('disabled', true);
                $('#clubLocalities').show();
            });


            $(document).on('click', '#newClub', function () {
                $('#newClubForm').show();
                $('#clubs').hide();
                $('#club').focus();
                $('#club').keyup(function () {
                    if ($(this).val() != '') {
                        $('#addClub').prop('disabled', false);
                    }
                    else {
                        $('#addClub').prop('disabled', true);
                    }
                });
            });

             $('#toListClub').click(function () {
                $('#newClubForm').hide();
                $('#club').val('');
                $('#AddClub').prop('disabled', true);
                $('#clubs').show();
            });

            $(document).on('click', '#addClubLocality', function () {
                $('#newClubLocalityForm').hide();
                $('#clubLocalities').show();
                var clubLocality = $('#clubLocality').val();
                var clubRegionId = $('#clubRegionId').val();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddNewLocality", "User")',
                    dataType: 'json',
                    data: { __RequestVerificationToken: token, id: clubRegionId, name: clubLocality },
                    success: function (response) {
                        alert(response.responseText);
                        $('#clubLocality').val('');
                        refreshClubListLocality(id);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });

            $(document).on('click', '#addClub', function () {
                var regionClubId = $('#clubRegionList').val();
                var localityClubId = $('#clubLocalityList').val();
                var club = $('#club').val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddNewSportClub", "User")',
                    dataType: 'json',
                    data: { __RequestVerificationToken: token, id: regionClubId, localityId: localityClubId, name: club },
                    success: function (response) {
                        alert(response.responseText);
                        $('#club').val('');
                        refreshListClubs(regionId, localityId);
                        $('#newClubForm').hide();
                        $('#clubs').show();
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });


    </script>



}

